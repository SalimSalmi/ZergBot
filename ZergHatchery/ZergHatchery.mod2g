use ZergHatchery as knowledge.
use ZergHatchery as actionspec.

module ZergHatchery {
	
	% If supply is low then build overlords
	if bel(supply(CS, TS), (TS == CS) ,not(isMorphing("Zerg Egg",_)), unitCost("Zerg Overlord", CostM,CostG), minerals(M),gas(G),G>=CostG ,M >= CostM) then train("Zerg Overlord").
			
	% If there is a goal to make a certain amount of units and there are not at least that amount of units
	% and there are enough resources then train the unit.
	if a-goal(unitAmount(Unit, G)), bel(aggregate_all(count, isMorphing("Zerg Egg",_), CMorph),
	unitAmount(Unit, C), Total is C+CMorph, G>Total, unitCost(Unit, CostM,CostG),  minerals(M),gas(Gas),M >= CostM, Gas>=CostG) then train(Unit).
	
	% If there are no units yet but there is a goal to make it and there are enough resources then train the unit.
	if a-goal(unitAmount(Unit, G)), bel(aggregate_all(count, isMorphing("Zerg Egg",_), CMorph),
	G>CMorph, not(unitAmount(Unit, _)), unitCost(Unit, CostM,CostG),  minerals(M),gas(Gas),M >= CostM, Gas>=CostG) then train(Unit).
	
}