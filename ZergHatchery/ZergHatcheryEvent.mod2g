use ZergHatchery as knowledge.
use "../GenericMods/GenericPercepts" as module.

module ZergHatcheryEvent {
	%%%%%%%%%%%%%%% --------------------------------------- Messaging --------------------------------------- %%%%%%%%%%%%%%%
	
	% If a friendly drone dies, let the OverMind know
	forall bel(friendly(Name,Id,_,_)) , not(percept(unit(true,Name,Id,_,_,_))) do (overMind).send:(death(Id)).
		
	%%%%%%%%%%%%%%% --------------------------------------- Percepts ---------------------------------------- %%%%%%%%%%%%%%%
	
	% The generic percepts most units use
	if true then GenericPercepts.
	
	% The handling of the supply percept
	if percept(resources(_, _, C, T)), bel(supply(OC, OT), (not(OC == C) ; not(OT == T))) then delete(supply(OC, OT)) + insert(supply(C, T)).
	
	% The handling of the queueSize percept
	if percept(queueSize(N)), bel(queueSize(No), No \= N) then delete(queueSize(No)) + insert(queueSize(N)).
		

	%%%%%%%%%%%%%%% --------------------------------------- GOALS ------------------------------------------- %%%%%%%%%%%%%%%

	% Only keep the highest number as goal
	forall goal(unitAmount(Unit,N), unitAmount(Unit,M), N > M) do drop(unitAmount(Unit,M)).
	
	% Have 5 drones if no spawning pool
	if not(goal(unitAmount("Zerg Drone", 5))), not(bel(unitAmount("Zerg Spawning Pool", _))) then adopt(unitAmount("Zerg Drone", 5)).

	% Have 6 drones with spawning pool
	if not(goal(unitAmount("Zerg Drone", 6))), bel(isMorphing("Zerg Spawning Pool", _); unitAmount("Zerg Spawning Pool", _)) then adopt(unitAmount("Zerg Drone", 6)).

	% If there is a spawning pool have twice as many attacking units as drones
	if bel(friendly("Zerg Spawning Pool", _, _, _), unitAmount("Zerg Hatchery",Zhatch),unitAmount("Zerg Drone",Du), unitAmount("Zerg Zergling", Dz),  Dz =< 1*Du, Dnew is Dz+3*Zhatch) then adopt(unitAmount("Zerg Zergling",Dnew)).
	if bel(friendly("Zerg Hydralisk Den", _, _, _),unitAmount("Zerg Hatchery",Zhatch), unitAmount("Zerg Drone",Du), unitAmount("Zerg Hydralisk", Dh), Dh =< 0.5*Du, Dnew is Dh+3*Zhatch) then adopt(unitAmount("Zerg Hydralisk",Dnew)).
	if bel(unitAmount("Zerg Drone",Du), unitAttack(Au), not(Au == 0), Au > 1.2*Du, Dnew is Du+2) then adopt(unitAmount("Zerg Drone",Dnew)). 
	
}